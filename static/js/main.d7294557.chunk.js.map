{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","imdb","className","href","target","rel","src","alt","map","genre","index","key","slice","App","state","isLoading","nowPage","dataCnt","limit","hasMore","movies","getMovies","a","console","log","axios","get","data","setState","this","dataLength","next","loader","movie","medium_cover_image","imdb_code","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+UA6CeA,MAzCf,YAAmE,EAAlDC,GAAmD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KACzD,OACE,yBAAKC,UAAU,SACb,uBACEC,KAAI,qCAAgCF,GACpCG,OAAO,SACPC,IAAI,uBAEJ,yBAAKC,IAAKP,EAAQQ,IAAKV,EAAOA,MAAOA,KAEvC,yBAAKK,UAAU,eACb,uBACEC,KAAI,qCAAgCF,GACpCG,OAAO,SACPC,IAAI,uBAEJ,wBAAIH,UAAU,gBAAgBL,IAEhC,wBAAIK,UAAU,eAAeN,GAC7B,wBAAIM,UAAU,iBACXF,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOR,UAAU,iBACvBO,OAIP,uBAAGP,UAAU,kBAAkBJ,EAAQc,MAAM,EAAG,KAAhD,UCgDOC,E,2MAvEbC,MAAQ,CACNC,WAAW,EACXC,QAAS,EACTC,QAAS,GACTC,MAAO,GACPC,SAAS,EACTC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,6DACVC,QAAQC,IAAI,mBADF,SAMAC,IAAMC,IAAN,wEACyD,EAAKZ,MAAME,UAPpE,gBAIEI,EAJF,EAGRO,KACEA,KAAQP,OAMZ,EAAKQ,SAAS,CACZR,OAAO,GAAD,mBAAM,EAAKN,MAAMM,QAAjB,YAA4BA,IAClCJ,QAAS,EAAKF,MAAME,QAAU,EAC9BD,WAAW,EACXE,QAAS,EAAKH,MAAMI,MAAQ,EAAKJ,MAAME,UAd/B,2C,mFAmBVa,KAAKR,c,+BAGG,IAAD,EACyCQ,KAAKf,MAA7CC,EADD,EACCA,UAAWK,EADZ,EACYA,OAAQH,EADpB,EACoBA,QAASE,EAD7B,EAC6BA,QAEpC,OADAI,QAAQC,IAAIL,GAEV,6BAASjB,UAAU,aAChBa,EACC,yBAAKb,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,kBAAC,IAAD,CACEA,UAAU,SACV4B,WAAYb,EACZc,KAAMF,KAAKR,UACXF,QAASA,EACTa,OACE,yBAAK9B,UAAU,UACb,0BAAMA,UAAU,gBAAhB,gBAIHkB,EAAOZ,KAAI,SAACyB,EAAOvB,GAAR,OACV,kBAAC,EAAD,CACEC,IAAKD,EACLf,GAAIsC,EAAMtC,GACVC,KAAMqC,EAAMrC,KACZC,MAAOoC,EAAMpC,MACbC,QAASmC,EAAMnC,QACfC,OAAQkC,EAAMC,mBACdlC,OAAQiC,EAAMjC,OACdC,KAAMgC,EAAME,qB,GA9DVC,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d7294557.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres, imdb }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <a\r\n        href={`https://www.imdb.com/title/${imdb}`}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n      </a>\r\n      <div className=\"movie__data\">\r\n        <a\r\n          href={`https://www.imdb.com/title/${imdb}`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n        </a>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    nowPage: 1,\n    dataCnt: 20,\n    limit: 20,\n    hasMore: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    console.log(\"getMovies Start\");\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\n      `https://yts-proxy.now.sh/list_movies.json?sort_by=rating&page=${this.state.nowPage}`\n    );\n    // this.setState({ movies, isLoading: false });\n    this.setState({\n      movies: [...this.state.movies, ...movies],\n      nowPage: this.state.nowPage + 1,\n      isLoading: false,\n      dataCnt: this.state.limit * this.state.nowPage\n    });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies, dataCnt, hasMore } = this.state;\n    console.log(hasMore);\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <InfiniteScroll\n            className=\"movies\"\n            dataLength={dataCnt}\n            next={this.getMovies}\n            hasMore={hasMore}\n            loader={\n              <div className=\"loader\">\n                <span className=\"loader__text\">Loading...</span>\n              </div>\n            }\n          >\n            {movies.map((movie, index) => (\n              <Movie\n                key={index}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n                imdb={movie.imdb_code}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}